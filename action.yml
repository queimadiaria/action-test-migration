name: 'Test Migration MS'
description: 'Queima Labs DevOps Stack - Test Migration - Docker-Compose File'
inputs:
  access_token:  # ID Service
    description: Personal Access Token - Scope read:pkg
    required: true
  service_port:  # ID Service
    description: Port where service is Exposed
    required: true
  config:
    description: JSON with all variables to configure job
    required: true
    default: "{\"NODE_ENV\":\"local\"}"
  sleep:
    description: sleep time
    required: true
    default: 15
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-id }}
runs:
  using: "composite"
  steps:
    - name: Setup Buildctl
      shell: bash
      run: |
        wget -q https://github.com/moby/buildkit/releases/download/v0.9.0/buildkit-v0.9.0.linux-amd64.tar.gz -O /tmp/buildkit.tar.gz
        sudo tar vxfz /tmp/buildkit.tar.gz -C /usr/local/

    - name: Configure NPM
      shell: bash
      env:
        PAT: ${{ inputs.access_token }}
        WORKSPACE: ${{ github.workspace }}
      run: |
        echo $WORKSPACE
        cd $WORKSPACE
        
        cat <<EOF > .npmrc
        @queimadiaria:registry=https://npm.pkg.github.com/
        //npm.pkg.github.com/:_authToken=${PAT}
        EOF

    - name: Run Test Migration container
      env:
        ENVIRONMENT: ""
        FILE: config/environment.config.sh
        WORKSPACE: ${{ github.workspace }}
        CONFIG: ${{ inputs.config }}
      shell: bash
      run: |
        cat>configs<<EOF
        $(echo $CONFIG | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]")
        EOF
        source configs

        if test -f "${FILE}"; 
        then
          bash ${FILE} 
          (sudo buildkitd --oci-worker=false --containerd-worker=true || echo working) & 
          sleep 3
          if [ -f "/tmp/dockercache/index.json" ];
          then
            echo "building with cache"
            sudo buildctl build \
              --frontend=dockerfile.v0 \
              --local context=${{ github.workspace }} \
              --local dockerfile=${{ github.workspace }} \
              --export-cache type=local,dest=/tmp/dockercache \
              --import-cache type=local,src=/tmp/dockercache \
              --output type=docker,name=api | docker load
          else
            echo "building without cache"
            sudo buildctl build \
              --frontend=dockerfile.v0 \
              --local context=${{ github.workspace }} \
              --local dockerfile=${{ github.workspace }} \
              --export-cache type=local,dest=/tmp/dockercache \
              --output type=docker,name=api | docker load
          fi
          docker-compose up -d
        else
          echo "The File ${FILE} doesn't exitis"
        fi

    - name: Check API healthckeck
      shell: bash
      env:
        PORT: ${{ inputs.service_port }}
      run: |
        echo ${{inputs.service_port}}
        echo  "http://localhost:${PORT}/health"
        sleep ${{ inputs.sleep }} \
        && curl -sf \
          http://localhost:${PORT}/health \
        || (docker-compose logs api && exit 1)
